# Написать программу, которая читая символы из обыкновенной последовательности (эмулируется конечным файлом, читающимся поблочно),
# распознает, преобразует и выводит на экран лексемы по определенному правилу. Лексемы разделены пробелами.
# Преобразование делать по возможности через словарь.
# Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа.
# Вариант 28.
# Шеснадцатиричные числа, у которых 3 справа цифры равна А16 расположенные в порядке убывания.
# Для каждой такой последовательности максимальное число вывести прописью.

import re  # Импорт модуля регулярных выражений

# Функция для преобразования числа в строку прописью на русском языке
def number_to_words(number):
    words = {
        '0': 'ноль',
        '1': 'один',
        '2': 'два',
        '3': 'три',
        '4': 'четыре',
        '5': 'пять',
        '6': 'шесть',
        '7': 'семь',
        '8': 'восемь',
        '9': 'девять',
        'A': 'десять',
        'B': 'одиннадцать',
        'C': 'двенадцать',
        'D': 'тринадцать',
        'E': 'четырнадцать',
        'F': 'пятнадцать'
    }
    return ' '.join(words[digit] for digit in str(number))

with open("input.txt", "r") as file:
    for line in file:
        numbers = re.findall(r'\b(?:0x)?([0-9A-Fa-f]*A[0-9A-Fa-f]{2})\b', line)
        sequence = []
        for number in map(str, numbers):
            sequence.append(number)
        if len(sequence) > 1 and sequence == sorted(sequence, reverse = True):
            max_number = sequence[0]
            max_number_words = number_to_words(max_number)
            #print(' '.join(map(str, sequence)) + f': {max_number_words} - максимальное число') #вывод последовательности и максимального числа буквами
            print(max_number + ': ' + max_number_words) 
