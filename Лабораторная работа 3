import random

# ввод K и N
K = int(input('Введите число K: '))
N = int(input('Введите число N: '))

# генерация матриц B, C, D, E
B = [[2, 2], [1, 3]]
C = [[0, 0], [0, 0]]
D = [[4, 4], [1, 3]]
E = [[random.randint(-10, 10) for _ in range(N // 2)] for _ in range(N // 2)]

# формирование матрицы А
A = [[0 for _ in range(N)] for _ in range(N)]
for i in range(N // 2):
    for j in range(N // 2):
        A[i][j] = B[i][j]
        A[i][j + N // 2] = C[i][j]
        A[i + N // 2][j] = D[i][j]
        A[i + N // 2][j + N // 2] = E[i][j]
print('Матрица А:')
for row in A:
    print(row)

# формирование матрицы F
count_zeros = 0
for i in range(N // 2):
    for j in range(N // 2):
        if i == 0 or i == N // 2 - 1 or j == 0 or j == N // 2 - 1:
            if C[i][j] == 0:
                count_zeros += 1
perimeter_4 = B[0][0] * B[0][1] * B[1][0] * B[1][1]
if count_zeros > perimeter_4:
    for i in range(N // 2):
        for j in range(N // 4):
            E[i][j], E[i][N // 2 - j - 1] = E[i][N // 2 - j - 1], E[i][j]
else:
    B, C = C, B
print('Матрица F:')
for row in B + C + D + E:
    print(row)

# вычисление выражения ((K*A^T)*(F+A)-K*F^T)
KAAT = [[0 for _ in range(N)] for _ in range(N)]
for i in range(N):
    for j in range(N):
        for k in range(N):
            KAAT[i][j] += K * A[j][k] * A[i][k]
KFT = [[0 for _ in range(N)] for _ in range(N)]
for i in range(N):
    for j in range(N):
        KFT[i][j] = K * F[j][i]
result = [[0 for _ in range(N)] for _ in range(N)]
for i in range(N):
    for j in range(N):
        for k in range(N):
            result[i][j] += KAAT[i][k] * (A[k][j] + F[k][j]) - KFT[i][j]
print('Результат:')
for row in result:
    print(row)
